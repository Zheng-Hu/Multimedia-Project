{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'EconomyView',\n  data() {\n    return {};\n  },\n  mounted() {\n    this.drawGovernmentIncomePieChart();\n  },\n  methods: {\n    async drawGovernmentIncomePieChart() {\n      let response = await axios.get('https://api.hkma.gov.hk/public/market-data-and-statistics/monthly-statistical-bulletin/ef-fc-resv-assets/fc-resv-assests');\n      console.log(response);\n      var governmentIncomePieChart = echarts.init(document.getElementById(\"governmentIncomePieChart\"));\n      var option;\n      option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        legend: {\n          data: ['Evaporation', 'Precipitation', 'Temperature']\n        },\n        xAxis: [{\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          axisPointer: {\n            type: 'shadow'\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: 'Precipitation',\n          min: 0,\n          max: 250,\n          interval: 50,\n          axisLabel: {\n            formatter: '{value} ml'\n          }\n        }],\n        series: [{\n          name: 'Evaporation',\n          type: 'bar',\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' ml';\n            }\n          },\n          data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3]\n        }, {\n          name: 'Precipitation',\n          type: 'bar',\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' ml';\n            }\n          },\n          data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\n        }, {\n          name: 'Temperature',\n          type: 'line',\n          yAxisIndex: 1,\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' °C';\n            }\n          },\n          data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2]\n        }]\n      };\n      governmentIncomePieChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":"AASA;AACA;AAEA;EACAA;EACAC;IACA,QAEA;EACA;EACAC;IACA;EACA;EACAC;IACA;MACA;MACAC;MACA;MACA;MACAC;QACAC;UACAC;UACAC;YACAC;YACAC;cACAC;YACA;UACA;QACA;QACAC;UACAC;YACAC;cAAAC;cAAAC;YAAA;YACAC;cAAAF;cAAAN;YAAA;YACAS;cAAAH;YAAA;YACAI;cAAAJ;YAAA;UACA;QACA;QACAK;UACAnB;QACA;QACAoB,QACA;UACAZ;UACAR;UACAO;YACAC;UACA;QACA,EACA;QACAa,QACA;UACAb;UACAT;UACAuB;UACAC;UACAC;UACAC;YACAC;UACA;QACA,EAEA;QACAC,SACA;UACA5B;UACAS;UACAH;YACAuB;cACA;YACA;UACA;UACA5B,OACA;QAEA,GACA;UACAD;UACAS;UACAH;YACAuB;cACA;YACA;UACA;UACA5B,OACA;QAEA,GACA;UACAD;UACAS;UACAqB;UACAxB;YACAuB;cACA;YACA;UACA;UACA5B;QACA;MAEA;MACA8B;IACA;EACA;AACA","names":["name","data","mounted","methods","console","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","xAxis","yAxis","min","max","interval","axisLabel","formatter","series","valueFormatter","yAxisIndex","governmentIncomePieChart"],"sourceRoot":"src/views","sources":["EconomyView.vue"],"sourcesContent":["<template>\r\n    <div class=\"Economy\">\r\n        <div id=\"governmentIncomePieChart\" style=\"width:100%; height: 800px;\"></div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n\r\n\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'EconomyView',\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.drawGovernmentIncomePieChart()\r\n    },\r\n    methods: {\r\n        async drawGovernmentIncomePieChart() {\r\n            let response = await axios.get('https://api.hkma.gov.hk/public/market-data-and-statistics/monthly-statistical-bulletin/ef-fc-resv-assets/fc-resv-assests')\r\n            console.log(response)\r\n            var governmentIncomePieChart = echarts.init(document.getElementById(\"governmentIncomePieChart\"));\r\n            var option\r\n            option = {\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                        crossStyle: {\r\n                            color: '#999'\r\n                        }\r\n                    }\r\n                },\r\n                toolbox: {\r\n                    feature: {\r\n                        dataView: { show: true, readOnly: false },\r\n                        magicType: { show: true, type: ['line', 'bar'] },\r\n                        restore: { show: true },\r\n                        saveAsImage: { show: true }\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: ['Evaporation', 'Precipitation', 'Temperature']\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                        axisPointer: {\r\n                            type: 'shadow'\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        name: 'Precipitation',\r\n                        min: 0,\r\n                        max: 250,\r\n                        interval: 50,\r\n                        axisLabel: {\r\n                            formatter: '{value} ml'\r\n                        }\r\n                    },\r\n\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: 'Evaporation',\r\n                        type: 'bar',\r\n                        tooltip: {\r\n                            valueFormatter: function (value) {\r\n                                return value + ' ml';\r\n                            }\r\n                        },\r\n                        data: [\r\n                            2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Precipitation',\r\n                        type: 'bar',\r\n                        tooltip: {\r\n                            valueFormatter: function (value) {\r\n                                return value + ' ml';\r\n                            }\r\n                        },\r\n                        data: [\r\n                            2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Temperature',\r\n                        type: 'line',\r\n                        yAxisIndex: 1,\r\n                        tooltip: {\r\n                            valueFormatter: function (value) {\r\n                                return value + ' °C';\r\n                            }\r\n                        },\r\n                        data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2]\r\n                    }\r\n                ]\r\n            };\r\n            governmentIncomePieChart.setOption(option)\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n\r\n</style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}