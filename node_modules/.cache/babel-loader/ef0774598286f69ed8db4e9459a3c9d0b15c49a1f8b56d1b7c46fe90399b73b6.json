{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'WeatherView',\n  data() {\n    return {\n      weatherWarnMessage: null,\n      weatherReport: null\n    };\n  },\n  mounted() {\n    this.getWeatherWarn();\n    this.getWeatherGeneralSituation();\n    this.getWeatherReport();\n  },\n  methods: {\n    async getWeatherWarn() {\n      let response = await axios.get('https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=warnsum&lang=sc');\n      this.weatherWarnMessage = response.data;\n    },\n    async getWeatherGeneralSituation() {\n      let response = await axios.get('https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=fnd&lang=sc');\n      this.weatherReport = response.data.generalSituation;\n    },\n    async getWeatherReport() {\n      let response = (await axios.get('https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=rhrread&lang=sc')).data;\n      console.log(response);\n      var rainfallBarChart = echarts.init(document.getElementById(\"rainfallBarChart\"));\n      var option;\n      option = {\n        xAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [120, 200, 150, 80, 70, 110, 130],\n          type: 'bar'\n        }]\n      };\n      rainfallBarChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":"AAmBA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EAEAC;IACA;IACA;IACA;EACA;EAEAC;IACA;MACA;MACA;IACA;IAEA;MACA;MAEA;IACA;IAEA;MACA;MACAC;MACA;MACA;MAEAC;QACAC;UACAC;UACAR;QACA;QACAS;UACAD;QACA;QACAE,SACA;UACAV;UACAQ;QACA;MAEA;MACAG;IACA;EACA;AACA","names":["name","data","weatherWarnMessage","weatherReport","mounted","methods","console","option","xAxis","type","yAxis","series","rainfallBarChart"],"sourceRoot":"src/views","sources":["WeatherView.vue"],"sourcesContent":["<template>\r\n    <div class=\"Weather\">\r\n        <div>\r\n            <h1>天气警告一览</h1>\r\n            <P>现时并无警告生效</P>\r\n        </div>\r\n        <div>\r\n            <h1>今日天气预报</h1>\r\n            <P>{{ weatherReport }}</P>\r\n        </div>\r\n        <div>\r\n            <div id=\"rainfallBarChart\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n\r\n\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'WeatherView',\r\n    data() {\r\n        return {\r\n            weatherWarnMessage: null,\r\n            weatherReport: null\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.getWeatherWarn();\r\n        this.getWeatherGeneralSituation();\r\n        this.getWeatherReport();\r\n    },\r\n\r\n    methods: {\r\n        async getWeatherWarn() {\r\n            let response = await axios.get('https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=warnsum&lang=sc')\r\n            this.weatherWarnMessage = response.data\r\n        },\r\n\r\n        async getWeatherGeneralSituation() {\r\n            let response = await axios.get('https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=fnd&lang=sc')\r\n\r\n            this.weatherReport = response.data.generalSituation\r\n        },\r\n\r\n        async getWeatherReport() {\r\n            let response = (await axios.get('https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=rhrread&lang=sc')).data\r\n            console.log(response)\r\n            var rainfallBarChart = echarts.init(document.getElementById(\"rainfallBarChart\"));\r\n            var option;\r\n\r\n            option = {\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                },\r\n                yAxis: {\r\n                    type: 'value'\r\n                },\r\n                series: [\r\n                    {\r\n                        data: [120, 200, 150, 80, 70, 110, 130],\r\n                        type: 'bar'\r\n                    }\r\n                ]\r\n            };\r\n            rainfallBarChart.setOption(option);\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n\r\n</style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}