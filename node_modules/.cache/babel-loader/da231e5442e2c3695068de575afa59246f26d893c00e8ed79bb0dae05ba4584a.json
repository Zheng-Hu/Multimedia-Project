{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'EconomyView',\n  data() {\n    return {};\n  },\n  mounted() {\n    this.drawGovernmentIncomePieChart();\n  },\n  methods: {\n    async drawGovernmentIncomePieChart() {\n      let response = (await axios.get('https://api.hkma.gov.hk/public/market-data-and-statistics/monthly-statistical-bulletin/ef-fc-resv-assets/fc-resv-assests')).data.result.records.slice(9, 21);\n      let response1 = (await axios.get('https://api.hkma.gov.hk/public/market-data-and-statistics/monthly-statistical-bulletin/banking/customer-deposits-by-type-cny')).data.result.records.slice(9, 21);\n      console.log(response1);\n      var governmentIncomePieChart = echarts.init(document.getElementById(\"governmentIncomePieChart\"));\n      var depositBarChart = echarts.init(document.getElementById(\"depositBarChart\"));\n      let foreignExchangeReservesList = response.map(function (item) {\n        return item.fc_resv_assets_total;\n      });\n      let CustomerdepositList = response1.map(function (item) {\n        return item.total_deposits;\n      });\n      var option;\n      option = {\n        title: {\n          text: \"2021 Foreign Reserve\",\n          subtext: 'In one million USD'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        yAxis: {\n          type: 'value',\n          min: 400000\n        },\n        series: [{\n          data: foreignExchangeReservesList,\n          type: 'bar'\n        }]\n      };\n      governmentIncomePieChart.setOption(option);\n      option = {\n        title: {\n          text: \"2021 Customer deposit in bank \",\n          subtext: 'In one million RMB'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        yAxis: {\n          type: 'value',\n          min: 500000\n        },\n        series: [{\n          data: CustomerdepositList,\n          type: 'bar'\n        }]\n      };\n      depositBarChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":"AAUA;AACA;AAEA;EACAA;EACAC;IACA,QAEA;EACA;EACAC;IACA;EACA;EACAC;IACA;MACA;MACA;MACAC;MACA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MACA;MACAC;QACAC;UACAC;UACAC;QACA;QACAC;UACAC;UACAT;QACA;QACAU;UACAD;UACAE;QACA;QACAC,SACA;UACAZ;UACAS;QACA;MAEA;MACAI;MACAT;QACAC;UACAC;UACAC;QACA;QACAC;UACAC;UACAT;QACA;QACAU;UACAD;UACAE;QACA;QACAC,SACA;UACAZ;UACAS;QACA;MAEA;MACAK;IACA;EACA;AACA","names":["name","data","mounted","methods","console","option","title","text","subtext","xAxis","type","yAxis","min","series","governmentIncomePieChart","depositBarChart"],"sourceRoot":"src/views","sources":["EconomyView.vue"],"sourcesContent":["<template>\r\n    <div class=\"Economy\">\r\n        <div id=\"governmentIncomePieChart\" style=\"width:100%; height: 420px;\"></div>\r\n        <div id=\"depositBarChart\" style=\"width:100%; height: 420px;\"></div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n\r\n\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'EconomyView',\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.drawGovernmentIncomePieChart()\r\n    },\r\n    methods: {\r\n        async drawGovernmentIncomePieChart() {\r\n            let response = (await axios.get('https://api.hkma.gov.hk/public/market-data-and-statistics/monthly-statistical-bulletin/ef-fc-resv-assets/fc-resv-assests')).data.result.records.slice(9,21)\r\n            let response1 = (await axios.get('https://api.hkma.gov.hk/public/market-data-and-statistics/monthly-statistical-bulletin/banking/customer-deposits-by-type-cny')).data.result.records.slice(9,21)\r\n            console.log(response1)\r\n            var governmentIncomePieChart = echarts.init(document.getElementById(\"governmentIncomePieChart\"));\r\n            var depositBarChart = echarts.init(document.getElementById(\"depositBarChart\"));\r\n            let foreignExchangeReservesList = response.map(function (item) {\r\n                 return item.fc_resv_assets_total\r\n             })\r\n             let CustomerdepositList = response1.map(function (item) {\r\n                 return item.total_deposits\r\n             })\r\n            var option\r\n            option = {\r\n                title: {\r\n                    text:\"2021 Foreign Reserve\",\r\n                    subtext: 'In one million USD'\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    min:400000,\r\n                },\r\n                series: [\r\n                    {\r\n                        data: foreignExchangeReservesList,\r\n                        type: 'bar'\r\n                    }\r\n                ]\r\n            };\r\n            governmentIncomePieChart.setOption(option)\r\n            option = {\r\n                title: {\r\n                    text:\"2021 Customer deposit in bank \",\r\n                    subtext: 'In one million RMB'\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    min:500000,\r\n                },\r\n                series: [\r\n                    {\r\n                        data: CustomerdepositList,\r\n                        type: 'bar'\r\n                    }\r\n                ]\r\n            };\r\n            depositBarChart.setOption(option)\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n\r\n</style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}