{"ast":null,"code":"// @ is an alias to /src\n\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n// import $ from 'jquery'\nexport default {\n  name: 'AboutView',\n  data() {\n    return {\n      info: null\n    };\n  },\n  mounted() {\n    this.drawLaborLineChart();\n    this.drawPopulationPieChart();\n    this.drawPopulationMapChart();\n  },\n  methods: {\n    async drawPopulationMapChart() {\n      var populationMapChart = echarts.init(document.getElementById(\"populationMapChart\"));\n      var myChart = echarts.init(populationMapChart);\n      // var option;\n      myChart.showLoading();\n      let geoJson = await axios.get('https://echarts.apache.org/examples/data/asset/geo/HK.json');\n      console.log(123123);\n      myChart.hideLoading();\n      // echarts.registerMap('HK', geoJson)\n      // axios.get('https://echarts.apache.org/examples/data/asset/geo/HK.json', function (geoJson) {\n      //   myChart.hideLoading();\n      //   echarts.registerMap('HK', geoJson);\n      //   myChart.setOption(\n      //     (option = {\n      //       title: {\n      //         text: 'Population Density of Hong Kong （2011）',\n      //         subtext: 'Data from Wikipedia',\n      //         sublink:\n      //           'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      //       },\n      //       tooltip: {\n      //         trigger: 'item',\n      //         formatter: '{b}<br/>{c} (p / km2)'\n      //       },\n      //       toolbox: {\n      //         show: true,\n      //         orient: 'vertical',\n      //         left: 'right',\n      //         top: 'center',\n      //         feature: {\n      //           dataView: { readOnly: false },\n      //           restore: {},\n      //           saveAsImage: {}\n      //         }\n      //       },\n      //       visualMap: {\n      //         min: 800,\n      //         max: 50000,\n      //         text: ['High', 'Low'],\n      //         realtime: false,\n      //         calculable: true,\n      //         inRange: {\n      //           color: ['lightskyblue', 'yellow', 'orangered']\n      //         }\n      //       },\n      //       series: [\n      //         {\n      //           name: '香港18区人口密度',\n      //           type: 'map',\n      //           map: 'HK',\n      //           label: {\n      //             show: true\n      //           },\n      //           data: [\n      //             { name: '中西区', value: 30000.34 },\n      //             { name: '湾仔', value: 15477.48 },\n      //             { name: '东区', value: 31686.1 },\n      //             { name: '南区', value: 6992.6 },\n      //             { name: '油尖旺', value: 44045.49 },\n      //             { name: '深水埗', value: 40689.64 },\n      //             { name: '九龙城', value: 37659.78 },\n      //             { name: '黄大仙', value: 45180.97 },\n      //             { name: '观塘', value: 55204.26 },\n      //             { name: '葵青', value: 21900.9 },\n      //             { name: '荃湾', value: 4918.26 },\n      //             { name: '屯门', value: 5881.84 },\n      //             { name: '元朗', value: 4178.01 },\n      //             { name: '北区', value: 2227.92 },\n      //             { name: '大埔', value: 2180.98 },\n      //             { name: '沙田', value: 9172.94 },\n      //             { name: '西贡', value: 3368 },\n      //             { name: '离岛', value: 806.98 }\n      //           ],\n      //           // 自定义名称映射\n      //           nameMap: {\n      //             'Central and Western': '中西区',\n      //             Eastern: '东区',\n      //             Islands: '离岛',\n      //             'Kowloon City': '九龙城',\n      //             'Kwai Tsing': '葵青',\n      //             'Kwun Tong': '观塘',\n      //             North: '北区',\n      //             'Sai Kung': '西贡',\n      //             'Sha Tin': '沙田',\n      //             'Sham Shui Po': '深水埗',\n      //             Southern: '南区',\n      //             'Tai Po': '大埔',\n      //             'Tsuen Wan': '荃湾',\n      //             'Tuen Mun': '屯门',\n      //             'Wan Chai': '湾仔',\n      //             'Wong Tai Sin': '黄大仙',\n      //             'Yau Tsim Mong': '油尖旺',\n      //             'Yuen Long': '元朗'\n      //           }\n      //         }\n      //       ]\n      //     })\n      //   );\n      // });\n      // option && myChart.setOption(option);\n    },\n\n    async drawPopulationPieChart() {\n      // let response = await axios.get('https://ogciopsi.blob.core.windows.net/dataset/labour-force/labour-force-by-year.json');\n      var populationPieChart = echarts.init(document.getElementById(\"populationPieChart\"));\n      var option;\n      option = {\n        title: {\n          text: 'Population 2022',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: 1048,\n            name: 'Male'\n          }, {\n            value: 735,\n            name: 'Female'\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      populationPieChart.setOption(option);\n    },\n    async drawLaborLineChart() {\n      let response = await axios.get('https://ogciopsi.blob.core.windows.net/dataset/labour-force/labour-force-by-year.json');\n      let yearList = response.data.map(function (item) {\n        return item.year;\n      });\n      let laborForceList = response.data.map(function (item) {\n        return item.labour_force / 1000000;\n      });\n      let unemploymentRateList = response.data.map(function (item) {\n        return item.unemployment_rate;\n      });\n      var laborforceLineChart = echarts.init(document.getElementById(\"laborforceLineChart\"));\n      var unemploymentRateChart = echarts.init(document.getElementById(\"unemploymentRateChart\"));\n      var option;\n      option = {\n        title: {\n          text: 'Labour force (Million)'\n        },\n        xAxis: {\n          type: 'category',\n          data: yearList\n        },\n        yAxis: {\n          type: 'value',\n          min: 2\n        },\n        series: [{\n          data: laborForceList,\n          type: 'line',\n          smooth: true\n        }]\n      };\n      laborforceLineChart.setOption(option);\n      option = {\n        title: {\n          text: 'Unemployment Rate'\n        },\n        xAxis: {\n          type: 'category',\n          data: yearList\n        },\n        yAxis: {\n          type: 'value',\n          min: 0\n        },\n        series: [{\n          data: unemploymentRateList,\n          type: 'line',\n          smooth: true\n        }]\n      };\n      unemploymentRateChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":"AAUA;;AAEA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EAEAC;IACA;MACA;MACA;MACA;MACAC;MACA;MACAC;MACAD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACA;MACA;MACA;MACA;MACAE;QACAC;UACAC;UAEAC;QACA;QACAC;UACAC;QACA;QACAC;UACAC;UACAJ;QACA;QACAK,SACA;UACAf;UACAgB;UACAC;UACAhB,OACA;YAAAiB;YAAAlB;UAAA,GACA;YAAAkB;YAAAlB;UAAA,EAEA;UACAmB;YACAC;cACAC;cACAC;cACAC;YACA;UACA;QACA;MAEA;MACAC;IACA;IACA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MAEA;QACA;MACA;MAEA;MACA;MACA;MAEAjB;QACAC;UACAC;QACA;QACAgB;UACAT;UACAf;QACA;QACAyB;UACAV;UACAW;QACA;QACAZ,SACA;UACAd;UACAe;UACAY;QACA;MAEA;MACAC;MACAtB;QACAC;UACAC;QACA;QACAgB;UACAT;UACAf;QACA;QACAyB;UACAV;UACAW;QACA;QACAZ,SACA;UACAd;UACAe;UACAY;QACA;MAEA;MACAE;IACA;EACA;AACA","names":["name","data","info","mounted","methods","myChart","console","option","title","text","left","tooltip","trigger","legend","orient","series","type","radius","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","populationPieChart","xAxis","yAxis","min","smooth","laborforceLineChart","unemploymentRateChart"],"sourceRoot":"src/views","sources":["AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"about\">\n\n    <div id=\"laborforceLineChart\" style=\"height: 400px; width: 600px;display: inline-block;\"></div>\n    <div id=\"unemploymentRateChart\" style=\"height: 400px; width: 600px; display: inline-block;\"></div>\n    <div id=\"populationPieChart\" style=\"height: 400px; width: 600px; display: inline-block\"></div>\n    <div id=\"populationMapChart\" style=\"height: 400px; width: 600px\"></div>\n  </div>\n</template>\n<script>\n// @ is an alias to /src\n\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n// import $ from 'jquery'\nexport default {\n  name: 'AboutView',\n  data() {\n    return {\n      info: null\n    }\n  },\n  mounted() {\n    this.drawLaborLineChart();\n    this.drawPopulationPieChart();\n    this.drawPopulationMapChart();\n  },\n\n  methods: {\n    async drawPopulationMapChart() {\n      var populationMapChart = echarts.init(document.getElementById(\"populationMapChart\"));\n      var myChart = echarts.init(populationMapChart);\n      // var option;\n      myChart.showLoading();\n      let geoJson = await axios.get('https://echarts.apache.org/examples/data/asset/geo/HK.json')\n      console.log(123123)\n      myChart.hideLoading();\n      // echarts.registerMap('HK', geoJson)\n      // axios.get('https://echarts.apache.org/examples/data/asset/geo/HK.json', function (geoJson) {\n      //   myChart.hideLoading();\n      //   echarts.registerMap('HK', geoJson);\n      //   myChart.setOption(\n      //     (option = {\n      //       title: {\n      //         text: 'Population Density of Hong Kong （2011）',\n      //         subtext: 'Data from Wikipedia',\n      //         sublink:\n      //           'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      //       },\n      //       tooltip: {\n      //         trigger: 'item',\n      //         formatter: '{b}<br/>{c} (p / km2)'\n      //       },\n      //       toolbox: {\n      //         show: true,\n      //         orient: 'vertical',\n      //         left: 'right',\n      //         top: 'center',\n      //         feature: {\n      //           dataView: { readOnly: false },\n      //           restore: {},\n      //           saveAsImage: {}\n      //         }\n      //       },\n      //       visualMap: {\n      //         min: 800,\n      //         max: 50000,\n      //         text: ['High', 'Low'],\n      //         realtime: false,\n      //         calculable: true,\n      //         inRange: {\n      //           color: ['lightskyblue', 'yellow', 'orangered']\n      //         }\n      //       },\n      //       series: [\n      //         {\n      //           name: '香港18区人口密度',\n      //           type: 'map',\n      //           map: 'HK',\n      //           label: {\n      //             show: true\n      //           },\n      //           data: [\n      //             { name: '中西区', value: 30000.34 },\n      //             { name: '湾仔', value: 15477.48 },\n      //             { name: '东区', value: 31686.1 },\n      //             { name: '南区', value: 6992.6 },\n      //             { name: '油尖旺', value: 44045.49 },\n      //             { name: '深水埗', value: 40689.64 },\n      //             { name: '九龙城', value: 37659.78 },\n      //             { name: '黄大仙', value: 45180.97 },\n      //             { name: '观塘', value: 55204.26 },\n      //             { name: '葵青', value: 21900.9 },\n      //             { name: '荃湾', value: 4918.26 },\n      //             { name: '屯门', value: 5881.84 },\n      //             { name: '元朗', value: 4178.01 },\n      //             { name: '北区', value: 2227.92 },\n      //             { name: '大埔', value: 2180.98 },\n      //             { name: '沙田', value: 9172.94 },\n      //             { name: '西贡', value: 3368 },\n      //             { name: '离岛', value: 806.98 }\n      //           ],\n      //           // 自定义名称映射\n      //           nameMap: {\n      //             'Central and Western': '中西区',\n      //             Eastern: '东区',\n      //             Islands: '离岛',\n      //             'Kowloon City': '九龙城',\n      //             'Kwai Tsing': '葵青',\n      //             'Kwun Tong': '观塘',\n      //             North: '北区',\n      //             'Sai Kung': '西贡',\n      //             'Sha Tin': '沙田',\n      //             'Sham Shui Po': '深水埗',\n      //             Southern: '南区',\n      //             'Tai Po': '大埔',\n      //             'Tsuen Wan': '荃湾',\n      //             'Tuen Mun': '屯门',\n      //             'Wan Chai': '湾仔',\n      //             'Wong Tai Sin': '黄大仙',\n      //             'Yau Tsim Mong': '油尖旺',\n      //             'Yuen Long': '元朗'\n      //           }\n      //         }\n      //       ]\n      //     })\n      //   );\n      // });\n      // option && myChart.setOption(option);\n    },\n    async drawPopulationPieChart() {\n      // let response = await axios.get('https://ogciopsi.blob.core.windows.net/dataset/labour-force/labour-force-by-year.json');\n      var populationPieChart = echarts.init(document.getElementById(\"populationPieChart\"));\n      var option;\n      option = {\n        title: {\n          text: 'Population 2022',\n\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [\n          {\n            name: 'Access From',\n            type: 'pie',\n            radius: '50%',\n            data: [\n              { value: 1048, name: 'Male' },\n              { value: 735, name: 'Female' },\n\n            ],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      };\n      populationPieChart.setOption(option)\n    },\n    async drawLaborLineChart() {\n      let response = await axios.get('https://ogciopsi.blob.core.windows.net/dataset/labour-force/labour-force-by-year.json')\n      let yearList = response.data.map(function (item) {\n        return item.year\n      })\n      let laborForceList = response.data.map(function (item) {\n        return item.labour_force / 1000000\n      })\n\n      let unemploymentRateList = response.data.map(function (item) {\n        return item.unemployment_rate\n      })\n\n      var laborforceLineChart = echarts.init(document.getElementById(\"laborforceLineChart\"));\n      var unemploymentRateChart = echarts.init(document.getElementById(\"unemploymentRateChart\"));\n      var option;\n\n      option = {\n        title: {\n          text: 'Labour force (Million)'\n        },\n        xAxis: {\n          type: 'category',\n          data: yearList\n        },\n        yAxis: {\n          type: 'value',\n          min: 2\n        },\n        series: [\n          {\n            data: laborForceList,\n            type: 'line',\n            smooth: true\n          }\n        ]\n      };\n      laborforceLineChart.setOption(option)\n      option = {\n        title: {\n          text: 'Unemployment Rate'\n        },\n        xAxis: {\n          type: 'category',\n          data: yearList\n        },\n        yAxis: {\n          type: 'value',\n          min: 0\n        },\n        series: [\n          {\n            data: unemploymentRateList,\n            type: 'line',\n            smooth: true\n          }\n        ]\n      };\n      unemploymentRateChart.setOption(option)\n    }\n  }\n}\n</script>\n\n<style>\n#laborforceLineChart {\n  background-color: white;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}